{"version":3,"sources":["ng://cplx-datatable/lib/cplx-datatable.service.ts","ng://cplx-datatable/lib/cplx-datatable.component.ts","ng://cplx-datatable/lib/cplx-datatable.module.ts"],"names":["Paginacion","this","actual","porpagina","paginasmostrar","paginas","ConfigDataTable","pagination","search","CplxDatatableService","prototype","crear_data_paginado","datalista","totalpaginas","paginado","porpaginaactual","posactual","index","length","slice","crear_paginacion","totalitems","paginaactual","paginacion","totalitem","Math","ceil","getPages","atras","siguiente","desde","maximoitems","hasta","console","log","paginactual","c","p","pagesToShow","pages","push","times","i","min","apply","max","sort","a","b","Injectable","args","providedIn","CplxDatatableComponent","_cplxdatatableservice","itemlistpaginates","ls_paginas","defaultpages","ngOnInit","ngOnChanges","changes","loading","isNullOrUndefined","config","itemlistcurrentpage","itemlist","go_page","search_data","value","_this","searchparam","content","forEach","element","toString","pagina","go_porpage","Component","selector","template","Input","SearchPipe","transform","items","filter","Array","isArray","filterKeys_1","Object","keys","item","some","keyName","RegExp","String","trim","test","Pipe","name","CplxDatatableModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","exports","providers"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nexport class Paginacion {\n\tdesde: number;\n\thasta: number;\n\tatras: number;\n\tactual: number = 1;\n\tsiguiente: number;\n\ttotalitem: number;\n\ttotalpaginas: number;\n\tporpagina: number = 30;\n\tpaginasmostrar = 5;\n\tpaginas: number[] = [];\n}\n\nexport class ConfigDataTable {\n\tpagination: boolean = false;\n\tsearch: boolean = false;\n}\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CplxDatatableService {\n\n\tconstructor() { }\n\n\n\tcrear_data_paginado(datalista: any[], totalpaginas: number, porpagina: number) {\n\t\tvar paginado = {};\n\t\tvar porpaginaactual = porpagina;\n\t\tvar posactual = 0;\n\t\tfor (let index = 1; index <= totalpaginas; index++) {\n\t\t\tif (index == totalpaginas)\n\t\t\t\tporpaginaactual = datalista.length;\n\t\t\tpaginado[\"pagina\" + index] = datalista.slice(posactual, posactual + porpaginaactual);\n\t\t\tposactual = posactual + porpaginaactual;\n\t\t}\n\t\treturn paginado;\n\t}\n\n\tcrear_paginacion(totalitems: number, paginaactual: number, porpagina: number) {\n\t\tvar paginacion = new Paginacion();\n\t\tpaginacion.totalitem = totalitems;\n\t\tpaginacion.totalpaginas = Math.ceil(totalitems / porpagina) || 0;\n\t\tpaginacion.paginas = this.getPages(totalitems, porpagina, paginaactual, paginacion.paginasmostrar);\n\t\tpaginacion.actual = paginaactual;\n\t\tif (paginaactual == 1 && paginacion.totalpaginas > 1) {\n\t\t\tpaginacion.atras = paginaactual;\n\t\t\tpaginacion.siguiente = paginaactual + 1;\n\t\t} else if (paginaactual == paginacion.totalpaginas) {\n\t\t\tpaginacion.atras = paginaactual - 1;\n\t\t\tpaginacion.siguiente = paginaactual;\n\t\t} else if (paginacion.paginas.length == paginaactual) {\n\t\t\tpaginacion.atras = paginaactual;\n\t\t\tpaginacion.actual = paginaactual;\n\t\t\tpaginacion.siguiente = paginaactual;\n\t\t} else {\n\t\t\tpaginacion.atras = paginaactual - 1;\n\t\t\tpaginacion.siguiente = paginaactual + 1;\n\t\t}\n\t\tpaginacion.porpagina = porpagina;\n\t\tpaginacion.desde = ((porpagina * paginaactual) - porpagina) + 1;\n\n\t\tvar maximoitems = porpagina * paginaactual;\n\t\tpaginacion.hasta = maximoitems > totalitems ? totalitems : maximoitems;\n\t\tconsole.log(paginacion);\n\t\treturn paginacion;\n\t}\n\n\tgetPages(totalitems: number, porpagina: number, paginactual: number, paginasmostrar: number): number[] {\n\t\tconst c = Math.ceil(totalitems / porpagina);\n\t\tconst p = paginactual || 1;\n\t\tconst pagesToShow = paginasmostrar || 9;\n\t\tconst pages: number[] = [];\n\t\tpages.push(p);\n\t\tconst times = pagesToShow - 1;\n\t\tfor (let i = 0; i < times; i++) {\n\t\t\tif (pages.length < pagesToShow) {\n\t\t\t\tif (Math.min.apply(null, pages) > 1) {\n\t\t\t\t\tpages.push(Math.min.apply(null, pages) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pages.length < pagesToShow) {\n\t\t\t\tif (Math.max.apply(null, pages) < c) {\n\t\t\t\t\tpages.push(Math.max.apply(null, pages) + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpages.sort((a, b) => a - b);\n\t\treturn pages;\n\t}\n\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Paginacion, CplxDatatableService, ConfigDataTable } from './cplx-datatable.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n\tselector: 'cplx-datatable',\n\ttemplateUrl: './cplx-datatable.component.html',\n\tstyleUrls: ['./cplx-datatable.component.css']\n})\nexport class CplxDatatableComponent implements OnInit, OnChanges {\n\n\t@Input() itemlist: any[];\n\t@Input() header: string[];\n\t@Input() content: string[];\n\t@Input() loading: boolean;\n\t@Input() search: string = \"\";\n\t@Input() config: ConfigDataTable | null;\n\t@Input() pages: number[];\n\n\tconstructor(private _cplxdatatableservice: CplxDatatableService) { }\n\n\tpaginacion = new Paginacion();\n\tsearchparam: any | {};\n\titemlistpaginates = {};\n\titemlistcurrentpage: any[];\n\n\tls_paginas: number[] = [];\n\n\tdefaultpages = [20, 30, 50, 100];\n\n\tngOnInit() { }\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis.loading = true;\n\t\tthis.ls_paginas = isNullOrUndefined(this.pages) ? this.defaultpages : this.pages;\n\n\t\tif (isNullOrUndefined(this.config)) {\n\t\t\tthis.config = new ConfigDataTable;\n\t\t\tthis.itemlistcurrentpage = this.itemlist;\n\t\t} else {\n\t\t\tif (this.config.pagination) {\n\t\t\t\tthis.paginacion.actual = 1;\n\t\t\t\tthis.paginacion.paginasmostrar = 3;\n\t\t\t\tthis.paginacion.porpagina = 10;\n\t\t\t\tthis.paginacion = this._cplxdatatableservice.crear_paginacion(this.itemlist.length, this.paginacion.actual, this.paginacion.porpagina);\n\t\t\t\tthis.itemlistpaginates = this._cplxdatatableservice.crear_data_paginado(this.itemlist, this.paginacion.totalpaginas, this.paginacion.porpagina);\n\t\t\t\tthis.go_page(this.paginacion.totalitem, this.paginacion.actual, this.paginacion.porpagina);\n\t\t\t}\n\t\t}\n\t\tthis.loading = false;\n\t}\n\n\tsearch_data(value: string) {\n\t\tthis.searchparam = {};\n\t\tthis.content.forEach(element => {\n\t\t\tthis.searchparam[element.toString()] = value;\n\t\t});\n\t\treturn this.searchparam;\n\t}\n\n\tgo_page(totalitem: number, pagina: number, porpagina: number) {\n\t\tthis.paginacion.actual = pagina;\n\t\tthis.paginacion = this._cplxdatatableservice.crear_paginacion(totalitem, pagina, porpagina)\n\t\tthis.itemlistcurrentpage = this.itemlistpaginates[\"pagina\" + pagina];\n\t}\n\n\tgo_porpage(porpagina: number) {\n\t\tthis.loading = true;\n\t\tthis.paginacion.porpagina = porpagina;\n\t\tthis.itemlistpaginates = {};\n\t\tthis.itemlistcurrentpage = [];\n\t\tthis.paginacion = this._cplxdatatableservice.crear_paginacion(this.itemlist.length, 1, porpagina);\n\t\tthis.itemlistpaginates = this._cplxdatatableservice.crear_data_paginado(this.itemlist, this.paginacion.totalpaginas, this.paginacion.porpagina);\n\t\tthis.itemlistcurrentpage = this.itemlistpaginates[\"pagina\" + this.paginacion.actual];\n\t\tthis.loading = false;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CplxDatatableComponent } from './cplx-datatable.component';\nimport { CommonModule } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { CplxDatatableService } from './cplx-datatable.service';\nimport { isNullOrUndefined } from 'util';\n\n@Pipe({\n\tname: 'datatablepipe'\n})\nexport class SearchPipe implements PipeTransform {\n\ttransform(items: any, filter: any): any {\n\t\tif (!filter)\n\t\t\treturn items;\n\t\tif (isNullOrUndefined(filter) || filter == \"\")\n\t\t\treturn items;\n\t\tif (!Array.isArray(items))\n\t\t\treturn items;\n\n\t\tif (filter && Array.isArray(items)) {\n\t\t\tlet filterKeys = Object.keys(filter);\n\t\t\treturn items.filter(item => {\n\t\t\t\treturn filterKeys.some((keyName) => {\n\t\t\t\t\treturn new RegExp(String(filter[keyName]).trim(), 'gi').test(item[keyName]) || filter[keyName] == \"\";\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\n\n@NgModule({\n\tdeclarations: [CplxDatatableComponent, SearchPipe],\n\timports: [CommonModule, FormsModule, ReactiveFormsModule],\n\texports: [CplxDatatableComponent],\n\tproviders: [CplxDatatableService]\n})\n\nexport class CplxDatatableModule { }\n"]}