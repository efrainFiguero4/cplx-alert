{"version":3,"sources":["ng://cplx-autocomplete/lib/cplx-autocomplete.service.ts","ng://cplx-autocomplete/lib/cplx-autocomplete.component.ts","ng://cplx-autocomplete/lib/cplx-autocomplete.module.ts"],"names":["CplxAutocompleteService","__decorate","Injectable","providedIn","FilterPipe","prototype","transform","items","searchText","visible","params","isNullOrUndefined","length","filter","data","RegExp","test","matchValue","value","Object","keys","map","key","some","result","matchValueParams","__decorate$1","Pipe","name","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CplxAutocompleteComponent","multi","this","selectedObject","EventEmitter","textChange","timeout","minlength","loading","disabled","required","formulario","FormGroup","FormControl","search","_value","onChange","_","onTouched","ngOnInit","_this","idcontainer","Math","random","toString","split","fromEvent","inputSearch","nativeElement","pipe","event","target","res","debounceTime","distinctUntilChanged","subscribe","text","emit","set_validator","controls","updateValueAndValidity","formgroup","control","setValidators","Validators","clearValidators","select","object","writeValue","ngOnChanges","changes","completar","forEach","d","push","join","setTimeout","reflectparam","reflectvalue","onClick","targetElement","clases","className","clasecontrol","clase","clasecontainer","defineProperty","v","setValue","registerOnChange","fn","registerOnTouched","Input","Output","ViewChild","static","ElementRef","HostListener","Component","selector","template","providers","CplxAutocompleteModule","__decorate$2","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CplxAutocompleteService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, HostListener, PipeTransform, Pipe, Output, EventEmitter, ElementRef, ViewChild, OnChanges, SimpleChanges, forwardRef } from '@angular/core';\nimport { isNullOrUndefined } from 'util';\nimport { fromEvent } from 'rxjs';\nimport { of } from \"rxjs\";\nimport { debounceTime, map, distinctUntilChanged, filter } from \"rxjs/operators\";\nimport { NgModel, NG_VALUE_ACCESSOR, ControlValueAccessor, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Pipe({ name: 'filter' })\nexport class FilterPipe implements PipeTransform {\n\ttransform(items: any[], searchText: string, visible: boolean, params?: string[]): any {\n\t\tif (!items) return [];\n\t\tif (!searchText || !visible) return items;\n\n\t\tif (!isNullOrUndefined(params) && params.length > 0)\n\t\t\treturn items.filter((data) => new RegExp(searchText, 'gi').test(data[\"search\"]));\n\t}\n\n\tmatchValue(data: any[], value: string) {\n\t\treturn Object.keys(data).map((key) => {\n\t\t\treturn new RegExp(value, 'gi').test(data[key]);\n\t\t}).some(result => result);\n\t}\n\n\tmatchValueParams(data: any[], value: string, params: string[]) {\n\t\treturn params.map((key) => {\n\t\t\treturn new RegExp(value, 'gi').test(data[key]);\n\t\t}).some(result => result);\n\t}\n}\n\n\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => CplxAutocompleteComponent),\n\tmulti: true\n};\n\n@Component({\n\tselector: 'cplx-autocomplete',\n\ttemplateUrl: './cplx-autocomplete.html',\n\tstyleUrls: ['./cplx-autocomplete.css'],\n\tproviders: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CplxAutocompleteComponent implements OnInit, OnChanges, ControlValueAccessor {\n\tconstructor() { }\n\n\tvisible = false;\n\tidcontainer: string;\n\n\t@Input() params: string[];\n\t@Input() data: any[];\n\t@Input() placeholder: string;\n\t@Input() filter: boolean = false;\n\t@Output() selectedObject = new EventEmitter<any>(true);\n\t@Output() textChange = new EventEmitter<String>(true)\n\t@Input() timeout = 500;\n\t@Input() minlength = 2;\n\t@Input() loading = false;\n\t@Input() disabled: boolean = false;\n\t@Input() reflectparam: any;\n\t@Input() reflectvalue: any;\n\t@Input() required = false;\n\n\t@ViewChild('inputSearch', { static: true }) inputSearch: ElementRef;\n\n\tformulario = new FormGroup({\n\t\tvalue: new FormControl(null)\n\t});\n\n\tngOnInit(): void {\n\t\tthis.idcontainer = Math.random().toString().split(\".\")[1];\n\t\tif (!this.filter) {\n\t\t\tfromEvent(this.inputSearch.nativeElement, 'keyup').pipe(\n\t\t\t\tmap((event: any) => {\n\t\t\t\t\treturn event.target.value;\n\t\t\t\t}),\n\t\t\t\tfilter(res => res.length >= this.minlength),\n\t\t\t\tdebounceTime(this.timeout),\n\t\t\t\tdistinctUntilChanged()\n\t\t\t).subscribe((text: string) => {\n\t\t\t\tthis.value = text;\n\t\t\t\tthis.visible = true;\n\t\t\t\tthis.textChange.emit(text);\n\t\t\t\t//this.loading = true;\n\t\t\t});\n\t\t}\n\n\t\tif (this.required) {\n\t\t\tthis.set_validator(this.formulario, \"value\", this.required);\n\t\t}\n\t\tthis.formulario.controls.value.updateValueAndValidity();\n\t}\n\n\tset_validator(formgroup: FormGroup, control: string, required?: boolean) {\n\t\tif (required) formgroup.controls[control].setValidators([Validators.required]);\n\t\telse formgroup.controls[control].clearValidators();\n\t\tformgroup.controls[control].updateValueAndValidity();\n\t}\n\n\tselect(object: any) {\n\t\tthis.selectedObject.emit(object);\n\t\tthis.writeValue(object[this.search]);\n\t\tthis.visible = false;\n\t}\n\n\tpublic search = \"search\";\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis.completar();\n\t}\n\n\tcompletar() {\n\t\tif (this.data) {\n\t\t\tthis.data.forEach((d) => {\n\t\t\t\tlet items = [];\n\t\t\t\tthis.params.map((key) => {\n\t\t\t\t\titems.push(d[key]);\n\t\t\t\t})\n\t\t\t\td[this.search] = items.join(\" - \");\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.data && this.reflectparam && this.reflectvalue && this.filter) {\n\t\t\t\t\tlet object = this.data.filter(d => d[this.reflectparam] == this.reflectvalue)[0];\n\t\t\t\t\tif (!isNullOrUndefined(object)) {\n\t\t\t\t\t\tthis.value = object[this.search];\n\t\t\t\t\t\tthis.selectedObject.emit(object);\n\t\t\t\t\t\tthis.textChange.emit(object[this.reflectparam]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t\tthis.formulario.controls.value.updateValueAndValidity();\n\t}\n\n\t@HostListener('window:click', ['$event.target'])\n\tonClick(targetElement: any) {\n\t\tlet clases: string[] = targetElement.className.split(\" \");\n\t\tlet clasecontrol: any[] = clases.filter(clase => clase == 'form-control-search');\n\t\tlet clasecontainer: any[] = clases.filter(clase => clase == this.idcontainer);\n\t\tthis.visible = (clasecontrol.length == 0 || clasecontainer.length == 0) ? false : true;\n\t\tthis.formulario.controls.value.updateValueAndValidity()\n\t}\n\n\tprivate _value: any = '';\n\tget value(): any { return this._value; };\n\n\tset value(v: any) {\n\t\tif (v !== this._value) {\n\t\t\tthis._value = v;\n\t\t\tthis.formulario.controls.value.setValue(v);\n\t\t\tthis.formulario.controls.value.updateValueAndValidity();\n\t\t\tthis.onChange(v);\n\t\t}\n\t}\n\n\twriteValue(value: any) {\n\t\tthis._value = value;\n\t\tthis.formulario.controls.value.setValue(value);\n\t\tthis.formulario.controls.value.updateValueAndValidity();\n\t\tthis.onChange(value);\n\t}\n\n\tonChange = (_: any) => { };\n\tonTouched = () => { };\n\tregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n\tregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n}\n","import { NgModule } from '@angular/core';\nimport { CplxAutocompleteComponent, FilterPipe } from './cplx-autocomplete.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n\tdeclarations: [CplxAutocompleteComponent, FilterPipe],\n\timports: [CommonModule, FormsModule, ReactiveFormsModule],\n\texports: [CplxAutocompleteComponent, FilterPipe]\n})\nexport class CplxAutocompleteModule { }\n"]}