{"version":3,"sources":["ng://cplx-autocomplete/lib/cplx-autocomplete.service.ts","ng://cplx-autocomplete/lib/cplx-autocomplete.component.ts","ng://cplx-autocomplete/lib/cplx-autocomplete.module.ts"],"names":["CplxAutocompleteService","__decorate","Injectable","providedIn","RequiredDirective","ngControl","renderer","elementRef","this","prototype","hasRequiredField","abstractControl","validator","required","ngOnInit","control","setAttribute","nativeElement","NgControl","Renderer2","ElementRef","__decorate$1","Directive","selector","ReadOnlyDirective","disabled","FilterPipe","transform","items","searchText","visible","params","isNullOrUndefined","length","filter","data","RegExp","test","matchValue","value","Object","keys","map","key","some","result","matchValueParams","Pipe","name","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CplxAutocompleteComponent","multi","selectedObject","EventEmitter","textChange","timeout","minlength","loading","isdisabled","isrequired","search","_value","onChange","_","onTouched","_this","idcontainer","Math","random","toString","split","fromEvent","inputSearch","pipe","event","target","res","debounceTime","distinctUntilChanged","subscribe","text","emit","select","object","writeValue","ngOnChanges","changes","completar","forEach","d","push","join","setTimeout","reflectparam","reflectvalue","onClick","targetElement","clases","className","clasecontrol","clase","clasecontainer","defineProperty","v","registerOnChange","fn","registerOnTouched","Input","Output","ViewChild","static","HostListener","Component","template","providers","CplxAutocompleteModule","__decorate$2","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CplxAutocompleteService {\n\n\tconstructor() { }\n}\n","import { Component, OnInit, Input, HostListener, PipeTransform, Pipe, Output, EventEmitter, ElementRef, ViewChild, OnChanges, SimpleChanges, forwardRef, Renderer2, Directive } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, AbstractControl, NgControl, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { debounceTime, map, distinctUntilChanged, filter } from \"rxjs/operators\";\nimport { isNullOrUndefined } from 'util';\nimport { fromEvent } from 'rxjs';\n\n@Directive({\n\tselector: '[fieldrequired]'\n})\nexport class RequiredDirective implements OnInit {\n\n\thasRequiredField(abstractControl: AbstractControl) {\n\t\tif (abstractControl.validator) {\n\t\t\tconst validator = abstractControl.validator({} as AbstractControl);\n\t\t\tif (validator && validator.required) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tngOnInit() {\n\t\tconst required = this.hasRequiredField(this.ngControl.control);\n\t\tif (required) {\n\t\t\tthis.renderer.setAttribute(this.elementRef.nativeElement, 'required', '');\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate ngControl: NgControl, public renderer: Renderer2, public elementRef: ElementRef\n\t) { }\n}\n\n@Directive({\n\tselector: '[fieldreadonly]'\n})\nexport class ReadOnlyDirective implements OnInit {\n\n\thasRequiredField(abstractControl: AbstractControl) {\n\t\tif (abstractControl.disabled) {\n\t\t\treturn abstractControl.disabled;\n\t\t}\n\t\treturn false;\n\t}\n\n\tngOnInit() {\n\t\tconst required = this.hasRequiredField(this.ngControl.control);\n\t\tif (required) {\n\t\t\tthis.renderer.setAttribute(this.elementRef.nativeElement, 'readonly', '');\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate ngControl: NgControl, public renderer: Renderer2, public elementRef: ElementRef\n\t) { }\n}\n\n@Pipe({ name: 'filter' })\nexport class FilterPipe implements PipeTransform {\n\ttransform(items: any[], searchText: string, visible: boolean, params?: string[]): any {\n\t\tif (!items) return [];\n\t\tif (!searchText || !visible) return items;\n\n\t\tif (!isNullOrUndefined(params) && params.length > 0)\n\t\t\treturn items.filter((data) => new RegExp(searchText, 'gi').test(data[\"search\"]));\n\t}\n\n\tmatchValue(data: any[], value: string) {\n\t\treturn Object.keys(data).map((key) => {\n\t\t\treturn new RegExp(value, 'gi').test(data[key]);\n\t\t}).some(result => result);\n\t}\n\n\tmatchValueParams(data: any[], value: string, params: string[]) {\n\t\treturn params.map((key) => {\n\t\t\treturn new RegExp(value, 'gi').test(data[key]);\n\t\t}).some(result => result);\n\t}\n}\n\n\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => CplxAutocompleteComponent),\n\tmulti: true\n};\n\n@Component({\n\tselector: 'cplx-autocomplete',\n\ttemplateUrl: './cplx-autocomplete.html',\n\tstyleUrls: ['./cplx-autocomplete.css'],\n\tproviders: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CplxAutocompleteComponent implements OnInit, OnChanges, ControlValueAccessor {\n\tconstructor() { }\n\n\tvisible = false;\n\tidcontainer: string;\n\n\t@Input() params: string[];\n\t@Input() data: any[];\n\t@Input() placeholder: string;\n\t@Input() filter: boolean = false;\n\t@Output() selectedObject = new EventEmitter<any>(true);\n\t@Output() textChange = new EventEmitter<String>(true)\n\t@Input() timeout = 500;\n\t@Input() minlength = 3;\n\t@Input() loading = false;\n\t@Input() isdisabled: boolean = false;\n\t@Input() reflectparam: any;\n\t@Input() reflectvalue: any;\n\t@Input() isrequired: boolean = false;\n\n\tpublic search = \"search\";\n\t@ViewChild('inputSearch', { static: true }) inputSearch: ElementRef;\n\n\tngOnInit(): void {\n\t\tthis.idcontainer = Math.random().toString().split(\".\")[1];\n\t\tfromEvent(this.inputSearch.nativeElement, 'keyup').pipe(\n\t\t\tmap((event: any) => {\n\t\t\t\treturn event.target.value;\n\t\t\t}),\n\t\t\tfilter(res => !this.filter ? res.length >= this.minlength : true),\n\t\t\tdebounceTime(this.timeout),\n\t\t\tdistinctUntilChanged()\n\t\t).subscribe((text: string) => {\n\t\t\tthis.value = text;\n\t\t\tthis.visible = true;\n\t\t\tthis.textChange.emit(text);\n\t\t});\n\t}\n\n\tselect(object: any) {\n\t\tthis.selectedObject.emit(object);\n\t\tthis.writeValue(object[this.search]);\n\t\tthis.visible = false;\n\t}\n\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis.completar();\n\t}\n\n\tcompletar() {\n\t\tif (this.data) {\n\t\t\tthis.data.forEach((d) => {\n\t\t\t\tlet items = [];\n\t\t\t\tthis.params.map((key) => {\n\t\t\t\t\titems.push(d[key]);\n\t\t\t\t})\n\t\t\t\td[this.search] = items.join(\" - \");\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.data && this.reflectparam && this.reflectvalue && this.filter) {\n\t\t\t\t\tlet object = this.data.filter(d => d[this.reflectparam] == this.reflectvalue)[0];\n\t\t\t\t\tif (!isNullOrUndefined(object)) {\n\t\t\t\t\t\tthis.value = object[this.search];\n\t\t\t\t\t\tthis.selectedObject.emit(object);\n\t\t\t\t\t\tthis.textChange.emit(object[this.reflectparam]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\t@HostListener('window:click', ['$event.target'])\n\tonClick(targetElement: any) {\n\t\tlet clases: string[] = targetElement.className.split(\" \");\n\t\tlet clasecontrol: any[] = clases.filter(clase => clase == 'input-search');\n\t\tlet clasecontainer: any[] = clases.filter(clase => clase == this.idcontainer);\n\t\tif (clasecontrol.length == 0 && clasecontainer.length == 0) this.visible = false;\n\t}\n\n\tprivate _value: any = '';\n\tget value(): any { return this._value; };\n\n\tset value(v: any) {\n\t\tif (v !== this._value) {\n\t\t\tthis._value = v;\n\t\t\tthis.onChange(v);\n\t\t}\n\t}\n\n\twriteValue(value: any) {\n\t\tthis._value = value;\n\t\tthis.onChange(value);\n\t}\n\n\tonChange = (_: any) => { };\n\tonTouched = () => { };\n\tregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n\tregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n}\n","import { NgModule } from '@angular/core';\nimport { CplxAutocompleteComponent, FilterPipe, RequiredDirective } from './cplx-autocomplete.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n\tdeclarations: [CplxAutocompleteComponent, FilterPipe, RequiredDirective],\n\timports: [CommonModule, FormsModule, ReactiveFormsModule],\n\texports: [CplxAutocompleteComponent, FilterPipe, RequiredDirective]\n})\nexport class CplxAutocompleteModule { }\n"]}