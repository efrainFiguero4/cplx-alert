{"version":3,"sources":["ng://cplx-autocomplete/lib/cplx-autocomplete.service.ts","ng://cplx-autocomplete/lib/cplx-autocomplete.component.ts","ng://cplx-autocomplete/lib/cplx-autocomplete.module.ts"],"names":["CplxAutocompleteService","__decorate","Injectable","providedIn","RequiredDirective","ngControl","renderer","elementRef","this","prototype","hasRequiredField","abstractControl","validator","required","ngOnInit","control","setAttribute","nativeElement","NgControl","Renderer2","ElementRef","__decorate$1","Directive","selector","FilterPipe","transform","items","searchText","visible","params","isNullOrUndefined","length","filter","data","RegExp","test","matchValue","value","Object","keys","map","key","some","result","matchValueParams","Pipe","name","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CplxAutocompleteComponent","multi","selectedObject","EventEmitter","textChange","timeout","minlength","loading","disabled","search","_value","onChange","_","onTouched","_this","idcontainer","Math","random","toString","split","fromEvent","inputSearch","pipe","event","target","res","debounceTime","distinctUntilChanged","subscribe","text","emit","select","object","writeValue","ngOnChanges","changes","completar","forEach","d","push","join","setTimeout","reflectparam","reflectvalue","onClick","targetElement","clases","className","clasecontrol","clase","clasecontainer","defineProperty","v","registerOnChange","fn","registerOnTouched","Input","Output","ViewChild","static","HostListener","Component","template","providers","CplxAutocompleteModule","__decorate$2","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CplxAutocompleteService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, HostListener, PipeTransform, Pipe, Output, EventEmitter, ElementRef, ViewChild, OnChanges, SimpleChanges, forwardRef, Renderer2, Directive } from '@angular/core';\nimport { isNullOrUndefined } from 'util';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged, filter } from \"rxjs/operators\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormGroup, FormControl, Validators, AbstractControl, NgControl } from '@angular/forms';\n\n@Directive({\n\tselector: '[fieldrequired]'\n})\nexport class RequiredDirective implements OnInit {\n\n\thasRequiredField(abstractControl: AbstractControl) {\n\t\tif (abstractControl.validator) {\n\t\t\tconst validator = abstractControl.validator({} as AbstractControl);\n\t\t\tif (validator && validator.required) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tngOnInit() {\n\t\tconst required = this.hasRequiredField(this.ngControl.control);\n\t\tif (required) {\n\t\t\tthis.renderer.setAttribute(this.elementRef.nativeElement, 'required', '');\n\t\t}\n\t}\n\n\tconstructor(\n\t\tprivate ngControl: NgControl, public renderer: Renderer2, public elementRef: ElementRef\n\t) { }\n\n}\n\n@Pipe({ name: 'filter' })\nexport class FilterPipe implements PipeTransform {\n\ttransform(items: any[], searchText: string, visible: boolean, params?: string[]): any {\n\t\tif (!items) return [];\n\t\tif (!searchText || !visible) return items;\n\n\t\tif (!isNullOrUndefined(params) && params.length > 0)\n\t\t\treturn items.filter((data) => new RegExp(searchText, 'gi').test(data[\"search\"]));\n\t}\n\n\tmatchValue(data: any[], value: string) {\n\t\treturn Object.keys(data).map((key) => {\n\t\t\treturn new RegExp(value, 'gi').test(data[key]);\n\t\t}).some(result => result);\n\t}\n\n\tmatchValueParams(data: any[], value: string, params: string[]) {\n\t\treturn params.map((key) => {\n\t\t\treturn new RegExp(value, 'gi').test(data[key]);\n\t\t}).some(result => result);\n\t}\n}\n\n\nconst noop = () => {\n};\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => CplxAutocompleteComponent),\n\tmulti: true\n};\n\n@Component({\n\tselector: 'cplx-autocomplete',\n\ttemplateUrl: './cplx-autocomplete.html',\n\tstyleUrls: ['./cplx-autocomplete.css'],\n\tproviders: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class CplxAutocompleteComponent implements OnInit, OnChanges, ControlValueAccessor {\n\tconstructor() { }\n\n\tvisible = false;\n\tidcontainer: string;\n\n\t@Input() params: string[];\n\t@Input() data: any[];\n\t@Input() placeholder: string;\n\t@Input() filter: boolean = false;\n\t@Output() selectedObject = new EventEmitter<any>(true);\n\t@Output() textChange = new EventEmitter<String>(true)\n\t@Input() timeout = 500;\n\t@Input() minlength = 2;\n\t@Input() loading = false;\n\t@Input() disabled: boolean = false;\n\t@Input() reflectparam: any;\n\t@Input() reflectvalue: any;\n\t@Input() required = false;\n\n\t@ViewChild('inputSearch', { static: true }) inputSearch: ElementRef;\n\n\n\tngOnInit(): void {\n\t\tthis.idcontainer = Math.random().toString().split(\".\")[1];\n\t\tif (!this.filter) {\n\t\t\tfromEvent(this.inputSearch.nativeElement, 'keyup').pipe(\n\t\t\t\tmap((event: any) => {\n\t\t\t\t\treturn event.target.value;\n\t\t\t\t}),\n\t\t\t\tfilter(res => res.length >= this.minlength),\n\t\t\t\tdebounceTime(this.timeout),\n\t\t\t\tdistinctUntilChanged()\n\t\t\t).subscribe((text: string) => {\n\t\t\t\tthis.value = text;\n\t\t\t\tthis.visible = true;\n\t\t\t\tthis.textChange.emit(text);\n\t\t\t\t//this.loading = true;\n\t\t\t});\n\t\t}\n\n\t}\n\n\tselect(object: any) {\n\t\tthis.selectedObject.emit(object);\n\t\tthis.writeValue(object[this.search]);\n\t\tthis.visible = false;\n\t}\n\n\tpublic search = \"search\";\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tthis.completar();\n\t}\n\n\tcompletar() {\n\t\tif (this.data) {\n\t\t\tthis.data.forEach((d) => {\n\t\t\t\tlet items = [];\n\t\t\t\tthis.params.map((key) => {\n\t\t\t\t\titems.push(d[key]);\n\t\t\t\t})\n\t\t\t\td[this.search] = items.join(\" - \");\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.data && this.reflectparam && this.reflectvalue && this.filter) {\n\t\t\t\t\tlet object = this.data.filter(d => d[this.reflectparam] == this.reflectvalue)[0];\n\t\t\t\t\tif (!isNullOrUndefined(object)) {\n\t\t\t\t\t\tthis.value = object[this.search];\n\t\t\t\t\t\tthis.selectedObject.emit(object);\n\t\t\t\t\t\tthis.textChange.emit(object[this.reflectparam]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t}\n\t}\n\n\t@HostListener('window:click', ['$event.target'])\n\tonClick(targetElement: any) {\n\t\tlet clases: string[] = targetElement.className.split(\" \");\n\t\tlet clasecontrol: any[] = clases.filter(clase => clase == 'form-control-search');\n\t\tlet clasecontainer: any[] = clases.filter(clase => clase == this.idcontainer);\n\t\tthis.visible = (clasecontrol.length == 0 || clasecontainer.length == 0) ? false : true;\n\t}\n\n\tprivate _value: any = '';\n\tget value(): any { return this._value; };\n\n\tset value(v: any) {\n\t\tif (v !== this._value) {\n\t\t\tthis._value = v;\n\t\t\tthis.onChange(v);\n\t\t}\n\t}\n\n\twriteValue(value: any) {\n\t\tthis._value = value;\n\t\tthis.onChange(value);\n\t}\n\n\tonChange = (_: any) => { };\n\tonTouched = () => { };\n\tregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n\tregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n}\n","import { NgModule } from '@angular/core';\nimport { CplxAutocompleteComponent, FilterPipe, RequiredDirective } from './cplx-autocomplete.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n\tdeclarations: [CplxAutocompleteComponent, FilterPipe, RequiredDirective],\n\timports: [CommonModule, FormsModule, ReactiveFormsModule],\n\texports: [CplxAutocompleteComponent, FilterPipe, RequiredDirective]\n})\nexport class CplxAutocompleteModule { }\n"]}